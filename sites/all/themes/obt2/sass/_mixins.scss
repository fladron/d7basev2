// @file
// Custom sass mixins

// a clearfix extension
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

/* The Simple Grid System */
@mixin simple-column-container {
  @include clearfix;
}
@mixin simple-column($column-count, $gutter-width) {
  float: left;
  width: ((100% - (($column-count - 1) * $gutter-width)) / $column-count);
  &:nth-child(n) {
    margin-right: $gutter-width;
  }
  &:nth-child(#{$column-count}n) {
    margin-right: 0;
  }
}

// hide the text
@mixin hide-text() {
  text-indent: -500em;
}

// one column-ize
@mixin one-columnize() {
  float: none;
  position: static;
  width: 100%;
  height: auto;
  //padding: 0;
  left: auto;
  right: auto;
  top: auto;
  bottom: auto;
  clear: both;
  margin: 0 0 20px;
}

// create inline list and separate by commas
@mixin separate-by-commas(){
  display: inline;
  &:after {
    content: ",";
    padding: 0 .2em 0 0;
  }
  &:last-child:after {
    content: "";
    padding: 0;
  }
}

// buttons
@mixin buttonize {
  display: inline-block;
  font-size: 16px;
  color: $link_color;
  padding: 6px;
  background: white;
  border: 1px solid $link_color;
  transition: all .3s ease;
  &:hover {
    color: $link_hover_color;
    border-color: $link_hover_color;
  }
}
